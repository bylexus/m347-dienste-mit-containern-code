### Compose-File für unsere Microservice-Architektur
### Dieses Beispiel zeigt nur den frontend-Dienst
### Die weitere Dienste werden später dazukonfiguriert.

# Definition der einzelnen Services / Containers:
services:
  # wir definieren den frontend-Service:
  frontend:
    # das Docker-Image soll ab dem lokalen Folder frontend/ gebuildet werden:
    # dort befindet sich das Dockerfile:
    build: frontend/
    # wir mappen den Host-Port 8020 auf den Container-Port 3000:
    ports:
      - "8020:3000"
    # optional: falls CMD im Dockerfile nicht definiert ist,
    # definieren wir hier, was beim Start ausgeführt werden soll:
    # command: sh -c "npm install && node server.js"
    depends_on:
      - api
      - feedback
      - db

  api:
    build: api/
    # Wir hängen den api-Folder als Volume ein:
    volumes:
      - ./api:/server
    # optional: falls CMD im Dockerfile nicht definiert ist,
    # definieren wir hier, was beim Start ausgeführt werden soll:
    # command: node server.js
    depends_on:
      - db
    environment:
      - DB_USER=${DB_USER}
      - DB_PW=${DB_PW}
      - DB=${DB}

  feedback:
    build: feedback/
    # Wir hängen den feedback-Folder als Volume ein:
    volumes:
      - ./feedback:/server
    # optional: falls CMD im Dockerfile nicht definiert ist,
    # definieren wir hier, was beim Start ausgeführt werden soll:
    # command: node server.js

  db:
    build: db/
    # Wir definieren ein docker-Volume (siehe unten) für persistente Postres-Daten:
    volumes:
      - dbdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  # Optional: pgadmin-Service:
  pgadmin:
    image: dpage/pgadmin4
    # Wir definieren ein docker-Volume (siehe unten) für persistente pgadmin-Daten:
    volumes:
      - pgadmindata:/var/lib/pgadmin
    ports:
      - 9999:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=m347@bztf.ch
      - PGADMIN_DEFAULT_PASSWORD=m347




























  doc:
    build: mkdocs/
    volumes:
      - ./mkdocs:/docs
    ports:
      - "10000:8000"


















# interne Docker-Volumes für die Persistierung:
volumes:
  dbdata: {}
  pgadmindata: {}
